---
layout: post
title:  "Why I decided to learn software development. "
date:   2016-06-04 16:48:44 -0400
---


# The Seed
I've been interested in computers since I was a kid. My mom worked in AT&T's corporate office, and was given an opportunity to work from home when I was 6 years old. This was really great for me because I could spend more time with her, but it also meant having access to a brand new PC, and I was immediately hooked. My skills got better and eventually I had my own computer, which I installed Linux on and begin learning C++ on my own. When I was 12 my mom and I moved to the Dominican Republic, and by the time I was 13 I had and new addiction - baseball. I started playing when I was 4, but now that I was in Dominican Republic I was able to play every single day in a competitive program, taking up most outside of school. I still loved computers, but just saw it as a fun hobby. I came back to the states to finish my final two years of high school, and never really thought of a future working with computers, even though my favorite class in high school was Visual Basic. I had no idea what I wanted at that age, even when it was right in front of me. 

# Weird Path
I graduated high school in 2007 when times were still good on Wall Street, and a few of my family members encouraged me to go into finance. Not knowing what I wanted to do at this point, I followed their advice, a common theme up to my early twenties. By the time it occurred to me that I made a mistake by not following one of my early passions and choosing to major in computer science was junior year. I think being away from home for so long was beginning to increase my self awareness. That summer I interned at the NYPD Pension Fund, and decided I would become a police officer. My sister had already been an NYPD officer for seven years, and our cousin was a commander of an entire precinct in Brooklyn. I knew this was something provide financial security for the rest of my life, a rare opportunity for people age. I convinced myself this was the best thing for me to do, since starting another degree from scratch in something I actually enjoyed wasn't financially possible. I took the NYPD entry exam and got a high enough grade to guarantee I'd have no problem joining the force, it'd just be a matter of time. So, I waited, but I had it all planned out already - I'd take all the advancement exams as soon as I was eligible and become a Captain by the time I was 35. I think deep down I knew this was something I never wanted, and was way too nice to actually be a good enforcer, so I distracted myself with thoughts of how far I could make it in my future career. While I waited, and completed more steps in the long hiring process, I began bartending. This was a lot of fun and a great way to make money while I entered my last year of school. Being the only introverted bartender where you work (maybe in the entire city) wasn't easy, so I made up for it by reading everything I could about mixology, and playing around with my own recipes in my free time. I was beginning to use creativity that was suppressed for a long time, learning everything I could about the fundamentals in order to create something new. In a lot of ways it's not that different from coding. Soon, I was about halfway through senior year and two managers at the club I worked at were fired, leading me to be promoted with way too little experience. I thought it was pretty cool that I was managing a member's only club in SoHo, while still in school, but I was still sure I'd be a cop when they finally called me. I had just passed the NYPD fitness test, and had an interview with an NYPD psychologist (felt more like a murder interrogation than a job interview). 

# Growing Up
My time as a club manager really opened up my eyes and led me to where I am today, though I'd have no idea exactly how until much later. This wasn't your typical New York City nightclub, it was my first experience working at a startup, and I was one of the first employees. The owners were a pair of childhood friends, one a coder, the other a finance whiz. They started the club after selling their software company a few years before, and ran the club with the same mentality. They had an ambitious plan of emerging as a force in the niche, member's only scene by leveraging their experience with software. It was a little bizarre in the beginning, you'd go to the tiny office in the basement and find up to five guys hunched over laptops. There was only enough table space for three people, so someone was always left working on a folding chair and no table. One of the people you'd usually find down there was the PHP developer they hired to build their robust website and member database. Sometimes it'd just be me and him down there, and we'd talk about what he was working on, while I took care of paperwork. I guess he could tell how interested I was in what he did, and he'd show me his code, breaking it down and going through the logical flow. He actually never graduated from college and was completely self taught, and encouraged me to de the same, writing down www.w3schools.com down on a piece of receipt paper. I went on the site the next day and was honestly a little turned off by the layout of the site, doubting if this was really the place for me start. However, hours later I landed on an article about App Academy, a San Francisco based dev bootcamp. They had been very successful in helping people like me become professional developers and were recruiting students for their New York City school, opening in the summer. It seemed too good to be true at first, but it quickly sunk in that it actually wasn't too late to do something I believed in. I hate to sound corny, but it really felt like it was my destiny. I had been able to suppress my doubts of becoming a cop until then, but that night everything changed. The next day I applied to App Academy and dedicated myself to learning Ruby. After a few months of immersing myself in Ruby, I had my admissions interview, but ultimately was not accepted into their first class that summer. It was heartbreaking, hands down one of the biggest disappointments of my life, but the seed was planted and I wasn't going to give up, no matter how long it took. This is how I discovered Flatiron School, and later the Learn Verified program. 

Right before I graduated college, I received a call from the NYPD, asking if I wanted to enter the next group going into the academy the following month. After considering it for a little bit I called back and declined. I believed in myself and wasn't going to settle for security. What I wanted was freedom - freedom to create. Meanwhile, back at the club we were going through some tough times. The vision the owner's had was brilliant, but like many startups, we were financially limited in how we could actually bring it to life. One of the main problems at the time was our point of sales system. We were one of the first establishments in the city to use an iPad based POS symptom, and it wasn't pretty. I mean, it was visually pretty when you walked in and saw these shiny iPad's spread out on the bar, where customers would sign there bill with their finger, but overall it was a disaster. One transaction would take a few minutes to complete, and when we had huge parties with 200+ people packed in, you'd have frustrated bartenders looking at a frozen app, and drunk/angry customers on the other side. It's still painful to think about the amount of sales that were missed because of the flawed system we were using. It was a combination of us using this app on the first generation iPad, a weak internet connection, and a lack of customer support for the app. I was fed up, and had given up on the idea of using an iPad as a POS system. The idea was great, but in practice it was causing us to lose money and good employees, who made less tips because of slow service. After complaining to the owner's for months, they brought in a old friend of their's who was developing his own POS app, [Salido](http://salido.com/). They still didn't have a finished product and would customize the app to fit exactly what we needed, which was huge for a club with such a unique business model. The idea was to make it as quick as a standard POS system, while being connected to our member database. Even though we were all a little skeptical they could pull it off it was an exciting time for. My favorite part of the job was now working with the developers on ideas. I began to realize how valuable my coding knowledge was. Although I was a noob when it came to coding, it was really easy for me to translate the needs we had as a business in a way that made sense to the developers.  

# Lazy or Efficient?

Looking back at that crappy POS system we had, I realize how easy it was to fall into a pattern of seeing your staff members as being lazy. I had plenty of times where I also questioned my own work ethic, but the truth is we were frustrated. This is something I can see clearly now that I embrace the idea of coders being lazy. This "laziness" is what makes us create efficient code. This is the beauty of coding: you see how can improve something, and you just do it! Most people aren't as empowered as coder's in this aspect. Taking the frustrated bartenders and myself as an example, we knew everyone would make more money, and customers would be way happier if only we had a real POS system that would allow everyone to do their job. The problem was that all we could do is bring it up to the people with the power to make changes, and as we quickly found out they were reluctant because of the cost. So, now all you can do is complain, or just deal with it, but either way you won't be happy. This can look a lot like laziness, but really it's rebellion. I believe one of the things that makes humans special is our desire to add value to our environment. Anytime we're doing something while knowing there is a more efficient way for it to be done we get frustrated. We're frustrated because that is time that could be used to add value. "How could this be better?" is one of the questions I've asked myself the most throughout my life, and it's led to a lot of inner rebellion when I realize I'm not being efficient. I eventually left hospitality to have a steady schedule that would allow me to study on the side, leading to my current job as an accountant at a Hedge Fund. Even now, working at a firm that manages billions of dollars, I find myself constantly frustrated for the same reasons. I remember when I was being trained, I kept thinking "there has to be a better way to do this!". There was a time when I would feel guilty about these thoughts, but now I know this is just my instinct telling me that the technology to make the task more efficient exists. This is a great instinct to have, and I think it's something that everyone shares to a certain extent. 

# The Future
I used to be a little bit of a pessimist when it came to our future and technology. I was like old man trapped in kid's body, seeing the potential downsides of technology (lots of matrix-like robot slave scenarios), while fantasizing about a time when things were much simpler. I'd envy our ancestors who lived off the land and seemed to live their lives to the fullest. The truth is I don't want to be a hunter, and I love air conditioning and iPhones, but I crave the freedom of a simple life. Learning to code has completely changed how I see the future. Software development is how we go back to simple lives. Technology gets rid of the things that people don't want to do, removing all those frustrating inefficiencies. We're still in the very early stages of our technological growth, which isn't alway's pretty, just like being the first bar with iPad's. However, I believe eventually what we'll end up seeing is people finding the ways they can best add value to the world. People often mention robots taking jobs, which is true, but a lot of the jobs that robots will take are jobs we probably don't want to do in the first place. I say let the robots take those jobs, so we can have the time and freedom to be creative and discover our true value. I can't say for sure if we're heading towards a technology based utopia, or a world where humans serve their robot masters. What I do know is that I refuse to continue being the guy who says "there's a better way to do this" without being able to do anything about it. This is why I decided to learn software development. 
